apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "kr.co.cools.today"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode Integer.parseInt("$versions.versionCode")
        versionName "$versions.versionName"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

//    realm {
//        syncEnabled = false
//    }
}

repositories {
    maven{
        url = 'https://dl.bintray.com/jeffjo/Common'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxandroid_version"

    // Logger
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Retrofit and OkHttp
    // OkHttp interceptors for logging
    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"
    implementation "com.squareup.okhttp3:okhttp:3.10.0"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:3.0.1"
    implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"

    // 구글 guava
    implementation 'com.google.guava:guava:26.0-android'

    //
    implementation 'kr.co.cools.core:common:0.0.3'
}

// dagger
dependencies{
    implementation "com.google.dagger:dagger:$versions.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$versions.daggerVersion"
    implementation "com.google.dagger:dagger-android:$versions.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$versions.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$versions.daggerVersion"

    // test kapt
    kaptAndroidTest "com.google.dagger:dagger-compiler:$versions.daggerVersion"
}

// room
dependencies{
    implementation "android.arch.persistence.room:runtime:$versions.room_version"
    kapt "android.arch.persistence.room:compiler:$versions.room_version" // use kapt for Kotlin

    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$versions.room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "android.arch.persistence.room:guava:$versions.room_version"

    // Test helpers
    testImplementation "android.arch.persistence.room:testing:$versions.room_version"
}


// live data
dependencies {
    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$versions.lifecycle_version"
    // alternatively - just ViewModel
    implementation "android.arch.lifecycle:viewmodel:$versions.lifecycle_version" // use -ktx for Kotlin
    // alternatively - just LiveData
    implementation "android.arch.lifecycle:livedata:$versions.lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation "android.arch.lifecycle:runtime:$versions.lifecycle_version"

    kapt "android.arch.lifecycle:compiler:$versions.lifecycle_version" // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
    implementation "android.arch.lifecycle:common-java8:$versions.lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:$versions.lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$versions.lifecycle_version"
}

